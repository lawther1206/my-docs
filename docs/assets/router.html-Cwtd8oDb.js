import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,b as e,d as l,o as t}from"./app-cQLVBdqJ.js";const p={};function d(r,s){return t(),n("div",null,[s[0]||(s[0]=i("h1",{id:"嵌套路由的踩坑点🔍",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#嵌套路由的踩坑点🔍"},[i("span",null,"嵌套路由的踩坑点🔍")])],-1)),e(" more "),s[1]||(s[1]=l(`<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">const router = createRouter({</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  history: createWebHistory(import.meta.env.BASE_URL),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  routes: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      path: &#39;/push&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      name: &#39;push&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      meta: {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        isHidden: true,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        title: &#39;添加文件&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      component: test,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      children: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          // 错误点：这里的路径应该是相对路径 push2 而不是 /path2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          path: &#39;/push2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          name: &#39;push2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          meta: {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            isHidden: true,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            title: &#39;添加文件2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          component: test2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用嵌套路由的时候，使用/push/push2导航提示：<mark>No match found for location with path &quot;/push/push2&quot;</mark><br> 但是直接使用<code>/push2</code>的时候路由却能正确导航，并且子组件也是嵌套在父组件内部，原因是我们在子组件内部使用path 的时候应该使用相对路径<code>push2</code>而不是<code>&#39;/path&#39;</code></p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  children: [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          // 正确</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          path: &#39;push2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          name: &#39;push2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          meta: {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            isHidden: true,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            title: &#39;添加文件2&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          component: test2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件上传踩坑📂" tabindex="-1"><a class="header-anchor" href="#文件上传踩坑📂"><span>文件上传踩坑📂</span></a></h2><p>最近写了一个excel文件自动拆分功能，在前端上传文件的时候，直接使用原生标签<code>form</code>的<code>action</code>属性上传可以正常上传成功，但是我想使用<code>fetch</code>自定义上传，后端死活接收不到文件，各种百度都是说要在<code>headers</code>上面指定提交格式</p><div class="language-language line-numbers-mode" data-highlighter="shiki" data-ext="language" data-title="language" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>headers: {</span></span>
<span class="line"><span>  &#39;Content-Type&#39;: &#39;multipart/form-data&#39;,</span></span>
<span class="line"><span>},</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正确做法是不要指定headers的上传类型，浏览器会自动更改，手动指定反而造成上传错误</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  // 正确做法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  const formData = new FormData()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  // 上传的文件名 excelFile 后端接收的时候也要一致</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  formData.append(&#39;excelFile&#39;, file.originFileObj)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    let res = await fetch(&#39;/api/uploadfile&#39;, {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      method: &#39;POST&#39;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      body: formData</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    let result = await res.json()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const k=a(p,[["render",d],["__file","router.html.vue"]]),o=JSON.parse('{"path":"/posts/router.html","title":"嵌套路由的踩坑点🔍","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-04-06T00:00:00.000Z","category":["工程化"],"tag":["一般"],"head":[["meta",{"property":"og:url","content":"https://github.com/lawther1206/my-docs/posts/router.html"}],["meta",{"property":"og:title","content":"嵌套路由的踩坑点🔍"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-17T08:43:41.000Z"}],["meta",{"property":"article:tag","content":"一般"}],["meta",{"property":"article:published_time","content":"2022-04-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-17T08:43:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"嵌套路由的踩坑点🔍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-17T08:43:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"leeyng\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"文件上传踩坑📂","slug":"文件上传踩坑📂","link":"#文件上传踩坑📂","children":[]}],"git":{"createdTime":1739781821000,"updatedTime":1739781821000,"contributors":[{"name":"liyong","username":"liyong","email":"1074681225@qq.com","commits":1,"url":"https://github.com/liyong"}]},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"posts/router.md","localizedDate":"2022年4月6日","excerpt":"\\n"}');export{k as comp,o as data};
